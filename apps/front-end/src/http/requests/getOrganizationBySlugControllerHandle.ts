/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { RequestConfig, ResponseErrorConfig } from "@/lib/api-client";
import fetch from "@/lib/api-client";
import type {
  GetOrganizationBySlugControllerHandle400,
  GetOrganizationBySlugControllerHandle401,
  GetOrganizationBySlugControllerHandle404,
  GetOrganizationBySlugControllerHandle409,
  GetOrganizationBySlugControllerHandle500,
  GetOrganizationBySlugControllerHandlePathParams,
  GetOrganizationBySlugControllerHandleQueryResponse,
} from "../types/GetOrganizationBySlugControllerHandle.ts";

function getGetOrganizationBySlugControllerHandleUrl(
  slug: GetOrganizationBySlugControllerHandlePathParams["slug"],
) {
  const res = { method: "GET", url: `/organization/by-slug/${slug}` as const };
  return res;
}

/**
 * @summary Get organization by slug
 * {@link /organization/by-slug/:slug}
 */
export async function getOrganizationBySlugControllerHandle(
  slug: GetOrganizationBySlugControllerHandlePathParams["slug"],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config;

  const res = await request<
    GetOrganizationBySlugControllerHandleQueryResponse,
    ResponseErrorConfig<
      | GetOrganizationBySlugControllerHandle400
      | GetOrganizationBySlugControllerHandle401
      | GetOrganizationBySlugControllerHandle404
      | GetOrganizationBySlugControllerHandle409
      | GetOrganizationBySlugControllerHandle500
    >,
    unknown
  >({
    method: "GET",
    url: getGetOrganizationBySlugControllerHandleUrl(slug).url.toString(),
    ...requestConfig,
  });
  return res;
}
