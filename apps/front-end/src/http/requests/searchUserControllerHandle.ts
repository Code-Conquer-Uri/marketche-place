/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { RequestConfig, ResponseErrorConfig } from "@/lib/api-client";
import fetch from "@/lib/api-client";
import type {
  SearchUserControllerHandle400,
  SearchUserControllerHandle401,
  SearchUserControllerHandle404,
  SearchUserControllerHandle409,
  SearchUserControllerHandle500,
  SearchUserControllerHandleQueryParams,
  SearchUserControllerHandleQueryResponse,
} from "../types/SearchUserControllerHandle.ts";

function getSearchUserControllerHandleUrl() {
  const res = { method: "GET", url: `/users/search` as const };
  return res;
}

/**
 * @summary Search users
 * {@link /users/search}
 */
export async function searchUserControllerHandle(
  params?: SearchUserControllerHandleQueryParams,
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config;

  const res = await request<
    SearchUserControllerHandleQueryResponse,
    ResponseErrorConfig<
      | SearchUserControllerHandle400
      | SearchUserControllerHandle401
      | SearchUserControllerHandle404
      | SearchUserControllerHandle409
      | SearchUserControllerHandle500
    >,
    unknown
  >({
    method: "GET",
    url: getSearchUserControllerHandleUrl().url.toString(),
    params,
    ...requestConfig,
  });
  return res;
}
