/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { RequestConfig, ResponseErrorConfig } from "@/lib/api-client";
import fetch from "@/lib/api-client";
import type {
  GetSimilarProductsControllerHandle400,
  GetSimilarProductsControllerHandle401,
  GetSimilarProductsControllerHandle404,
  GetSimilarProductsControllerHandle409,
  GetSimilarProductsControllerHandle500,
  GetSimilarProductsControllerHandlePathParams,
  GetSimilarProductsControllerHandleQueryParams,
  GetSimilarProductsControllerHandleQueryResponse,
} from "../types/GetSimilarProductsControllerHandle.ts";

function getGetSimilarProductsControllerHandleUrl(
  productId: GetSimilarProductsControllerHandlePathParams["productId"],
) {
  const res = { method: "GET", url: `/products/${productId}/similar` as const };
  return res;
}

/**
 * @summary Get similar products based on description
 * {@link /products/:productId/similar}
 */
export async function getSimilarProductsControllerHandle(
  productId: GetSimilarProductsControllerHandlePathParams["productId"],
  params?: GetSimilarProductsControllerHandleQueryParams,
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config;

  const res = await request<
    GetSimilarProductsControllerHandleQueryResponse,
    ResponseErrorConfig<
      | GetSimilarProductsControllerHandle400
      | GetSimilarProductsControllerHandle401
      | GetSimilarProductsControllerHandle404
      | GetSimilarProductsControllerHandle409
      | GetSimilarProductsControllerHandle500
    >,
    unknown
  >({
    method: "GET",
    url: getGetSimilarProductsControllerHandleUrl(productId).url.toString(),
    params,
    ...requestConfig,
  });
  return res;
}
