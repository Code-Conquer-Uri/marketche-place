/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { RequestConfig, ResponseErrorConfig } from "@/lib/api-client";
import fetch from "@/lib/api-client";
import type {
  UpdateProductControllerHandle400,
  UpdateProductControllerHandle401,
  UpdateProductControllerHandle404,
  UpdateProductControllerHandle409,
  UpdateProductControllerHandle500,
  UpdateProductControllerHandleMutationRequest,
  UpdateProductControllerHandleMutationResponse,
  UpdateProductControllerHandlePathParams,
} from "../types/UpdateProductControllerHandle.ts";

function getUpdateProductControllerHandleUrl(
  productId: UpdateProductControllerHandlePathParams["productId"],
) {
  const res = { method: "PATCH", url: `/products/${productId}` as const };
  return res;
}

/**
 * @summary Update a product
 * {@link /products/:productId}
 */
export async function updateProductControllerHandle(
  productId: UpdateProductControllerHandlePathParams["productId"],
  data?: UpdateProductControllerHandleMutationRequest,
  config: Partial<
    RequestConfig<UpdateProductControllerHandleMutationRequest>
  > & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config;

  const requestData = data;
  const res = await request<
    UpdateProductControllerHandleMutationResponse,
    ResponseErrorConfig<
      | UpdateProductControllerHandle400
      | UpdateProductControllerHandle401
      | UpdateProductControllerHandle404
      | UpdateProductControllerHandle409
      | UpdateProductControllerHandle500
    >,
    UpdateProductControllerHandleMutationRequest
  >({
    method: "PATCH",
    url: getUpdateProductControllerHandleUrl(productId).url.toString(),
    data: requestData,
    ...requestConfig,
  });
  return res;
}
