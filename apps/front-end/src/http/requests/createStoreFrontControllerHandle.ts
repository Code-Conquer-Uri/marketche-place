/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { RequestConfig, ResponseErrorConfig } from "@/lib/api-client";
import fetch from "@/lib/api-client";
import type {
  CreateStoreFrontControllerHandle400,
  CreateStoreFrontControllerHandle401,
  CreateStoreFrontControllerHandle404,
  CreateStoreFrontControllerHandle409,
  CreateStoreFrontControllerHandle500,
  CreateStoreFrontControllerHandleMutationRequest,
  CreateStoreFrontControllerHandleMutationResponse,
} from "../types/CreateStoreFrontControllerHandle.ts";

function getCreateStoreFrontControllerHandleUrl() {
  const res = { method: "POST", url: `/store-front` as const };
  return res;
}

/**
 * @summary Create a store front
 * {@link /store-front}
 */
export async function createStoreFrontControllerHandle(
  data: CreateStoreFrontControllerHandleMutationRequest,
  config: Partial<
    RequestConfig<CreateStoreFrontControllerHandleMutationRequest>
  > & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config;

  const requestData = data;
  const res = await request<
    CreateStoreFrontControllerHandleMutationResponse,
    ResponseErrorConfig<
      | CreateStoreFrontControllerHandle400
      | CreateStoreFrontControllerHandle401
      | CreateStoreFrontControllerHandle404
      | CreateStoreFrontControllerHandle409
      | CreateStoreFrontControllerHandle500
    >,
    CreateStoreFrontControllerHandleMutationRequest
  >({
    method: "POST",
    url: getCreateStoreFrontControllerHandleUrl().url.toString(),
    data: requestData,
    ...requestConfig,
  });
  return res;
}
