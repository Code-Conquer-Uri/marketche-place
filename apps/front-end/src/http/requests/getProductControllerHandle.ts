/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { RequestConfig, ResponseErrorConfig } from "@/lib/api-client";
import fetch from "@/lib/api-client";
import type {
  GetProductControllerHandle400,
  GetProductControllerHandle401,
  GetProductControllerHandle404,
  GetProductControllerHandle409,
  GetProductControllerHandle500,
  GetProductControllerHandlePathParams,
  GetProductControllerHandleQueryResponse,
} from "../types/GetProductControllerHandle.ts";

function getGetProductControllerHandleUrl(
  productId: GetProductControllerHandlePathParams["productId"],
) {
  const res = {
    method: "GET",
    url: `/products/get-by-id/${productId}` as const,
  };
  return res;
}

/**
 * @summary Get a product by ID
 * {@link /products/get-by-id/:productId}
 */
export async function getProductControllerHandle(
  productId: GetProductControllerHandlePathParams["productId"],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config;

  const res = await request<
    GetProductControllerHandleQueryResponse,
    ResponseErrorConfig<
      | GetProductControllerHandle400
      | GetProductControllerHandle401
      | GetProductControllerHandle404
      | GetProductControllerHandle409
      | GetProductControllerHandle500
    >,
    unknown
  >({
    method: "GET",
    url: getGetProductControllerHandleUrl(productId).url.toString(),
    ...requestConfig,
  });
  return res;
}
