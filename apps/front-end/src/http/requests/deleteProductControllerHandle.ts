/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { RequestConfig, ResponseErrorConfig } from "@/lib/api-client";
import fetch from "@/lib/api-client";
import type {
  DeleteProductControllerHandle400,
  DeleteProductControllerHandle401,
  DeleteProductControllerHandle404,
  DeleteProductControllerHandle409,
  DeleteProductControllerHandle500,
  DeleteProductControllerHandleMutationResponse,
  DeleteProductControllerHandlePathParams,
} from "../types/DeleteProductControllerHandle.ts";

function getDeleteProductControllerHandleUrl(
  productId: DeleteProductControllerHandlePathParams["productId"],
) {
  const res = { method: "DELETE", url: `/products/${productId}` as const };
  return res;
}

/**
 * @summary Delete a product
 * {@link /products/:productId}
 */
export async function deleteProductControllerHandle(
  productId: DeleteProductControllerHandlePathParams["productId"],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config;

  const res = await request<
    DeleteProductControllerHandleMutationResponse,
    ResponseErrorConfig<
      | DeleteProductControllerHandle400
      | DeleteProductControllerHandle401
      | DeleteProductControllerHandle404
      | DeleteProductControllerHandle409
      | DeleteProductControllerHandle500
    >,
    unknown
  >({
    method: "DELETE",
    url: getDeleteProductControllerHandleUrl(productId).url.toString(),
    ...requestConfig,
  });
  return res;
}
