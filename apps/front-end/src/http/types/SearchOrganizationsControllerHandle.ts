/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { SearchOrganizationsResponseDto } from "./SearchOrganizationsResponseDto.ts";

export const searchOrganizationsControllerHandleQueryParamsOrderByEnum = {
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  name: "name",
  slug: "slug",
} as const;

export type SearchOrganizationsControllerHandleQueryParamsOrderByEnum =
  (typeof searchOrganizationsControllerHandleQueryParamsOrderByEnum)[keyof typeof searchOrganizationsControllerHandleQueryParamsOrderByEnum];

export const searchOrganizationsControllerHandleQueryParamsOrderDirectionEnum =
  {
    asc: "asc",
    desc: "desc",
  } as const;

export type SearchOrganizationsControllerHandleQueryParamsOrderDirectionEnum =
  (typeof searchOrganizationsControllerHandleQueryParamsOrderDirectionEnum)[keyof typeof searchOrganizationsControllerHandleQueryParamsOrderDirectionEnum];

export type SearchOrganizationsControllerHandleQueryParams = {
  /**
   * @description Search term to filter organizations by name or slug
   * @type string | undefined
   */
  search?: string;
  /**
   * @description Page number for pagination (default: 1)
   * @type number | undefined
   */
  page?: number;
  /**
   * @description Number of items per page (default: 10)
   * @type number | undefined
   */
  perPage?: number;
  /**
   * @description Field to order by (default: createdAt)
   * @type string | undefined
   */
  orderBy?: SearchOrganizationsControllerHandleQueryParamsOrderByEnum;
  /**
   * @description Order direction (default: desc)
   * @type string | undefined
   */
  orderDirection?: SearchOrganizationsControllerHandleQueryParamsOrderDirectionEnum;
};

/**
 * @description Returns paginated search results for organizations
 */
export type SearchOrganizationsControllerHandle200 =
  SearchOrganizationsResponseDto;

export type SearchOrganizationsControllerHandleQueryResponse =
  SearchOrganizationsControllerHandle200;

export type SearchOrganizationsControllerHandleQuery = {
  Response: SearchOrganizationsControllerHandle200;
  QueryParams: SearchOrganizationsControllerHandleQueryParams;
  Errors: any;
};
