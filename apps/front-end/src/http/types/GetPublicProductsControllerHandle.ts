/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { BadRequestErrorDto } from "./BadRequestErrorDto.ts";
import type { ConflictErrorDto } from "./ConflictErrorDto.ts";
import type { GetPublicProductsResponseDto } from "./GetPublicProductsResponseDto.ts";
import type { InternalServerErrorDto } from "./InternalServerErrorDto.ts";
import type { NotFoundErrorDto } from "./NotFoundErrorDto.ts";
import type { UnauthorizedErrorDto } from "./UnauthorizedErrorDto.ts";

export const getPublicProductsControllerHandleQueryParamsOrderDirectionEnum = {
  asc: "asc",
  desc: "desc",
} as const;

export type GetPublicProductsControllerHandleQueryParamsOrderDirectionEnum =
  (typeof getPublicProductsControllerHandleQueryParamsOrderDirectionEnum)[keyof typeof getPublicProductsControllerHandleQueryParamsOrderDirectionEnum];

export const getPublicProductsControllerHandleQueryParamsOrderByEnum = {
  createdAt: "createdAt",
  updatedAt: "updatedAt",
  title: "title",
  price: "price",
} as const;

export type GetPublicProductsControllerHandleQueryParamsOrderByEnum =
  (typeof getPublicProductsControllerHandleQueryParamsOrderByEnum)[keyof typeof getPublicProductsControllerHandleQueryParamsOrderByEnum];

export type GetPublicProductsControllerHandleQueryParams = {
  /**
   * @description Maximum number of products per organization
   * @minLength 1
   * @maxLength 50
   * @default 10
   * @type number | undefined
   */
  limitPerOrganization?: number;
  /**
   * @type string | undefined
   */
  orderDirection?: GetPublicProductsControllerHandleQueryParamsOrderDirectionEnum;
  /**
   * @type string | undefined
   */
  orderBy?: GetPublicProductsControllerHandleQueryParamsOrderByEnum;
};

/**
 * @description Returns public products from all organizations
 */
export type GetPublicProductsControllerHandle200 = GetPublicProductsResponseDto;

/**
 * @description Bad Request
 */
export type GetPublicProductsControllerHandle400 = BadRequestErrorDto;

/**
 * @description Unauthorized
 */
export type GetPublicProductsControllerHandle401 = UnauthorizedErrorDto;

/**
 * @description Not Found
 */
export type GetPublicProductsControllerHandle404 = NotFoundErrorDto;

/**
 * @description Conflict
 */
export type GetPublicProductsControllerHandle409 = ConflictErrorDto;

/**
 * @description Internal Server Error
 */
export type GetPublicProductsControllerHandle500 = InternalServerErrorDto;

export type GetPublicProductsControllerHandleQueryResponse =
  GetPublicProductsControllerHandle200;

export type GetPublicProductsControllerHandleQuery = {
  Response: GetPublicProductsControllerHandle200;
  QueryParams: GetPublicProductsControllerHandleQueryParams;
  Errors:
    | GetPublicProductsControllerHandle400
    | GetPublicProductsControllerHandle401
    | GetPublicProductsControllerHandle404
    | GetPublicProductsControllerHandle409
    | GetPublicProductsControllerHandle500;
};
