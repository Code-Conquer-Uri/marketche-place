/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { BadRequestErrorDto } from "./BadRequestErrorDto.ts";
import type { ConflictErrorDto } from "./ConflictErrorDto.ts";
import type { GetProductsByOrganizationResponseDto } from "./GetProductsByOrganizationResponseDto.ts";
import type { InternalServerErrorDto } from "./InternalServerErrorDto.ts";
import type { NotFoundErrorDto } from "./NotFoundErrorDto.ts";
import type { UnauthorizedErrorDto } from "./UnauthorizedErrorDto.ts";

export type GetProductsByOrganizationControllerHandleQueryParams = {
  /**
   * @type string
   */
  organizationId: string;
};

/**
 * @description Returns products for the specified organization
 */
export type GetProductsByOrganizationControllerHandle200 =
  GetProductsByOrganizationResponseDto;

/**
 * @description Bad Request
 */
export type GetProductsByOrganizationControllerHandle400 = BadRequestErrorDto;

/**
 * @description Unauthorized
 */
export type GetProductsByOrganizationControllerHandle401 = UnauthorizedErrorDto;

/**
 * @description Not Found
 */
export type GetProductsByOrganizationControllerHandle404 = NotFoundErrorDto;

/**
 * @description Conflict
 */
export type GetProductsByOrganizationControllerHandle409 = ConflictErrorDto;

/**
 * @description Internal Server Error
 */
export type GetProductsByOrganizationControllerHandle500 =
  InternalServerErrorDto;

export type GetProductsByOrganizationControllerHandleQueryResponse =
  GetProductsByOrganizationControllerHandle200;

export type GetProductsByOrganizationControllerHandleQuery = {
  Response: GetProductsByOrganizationControllerHandle200;
  QueryParams: GetProductsByOrganizationControllerHandleQueryParams;
  Errors:
    | GetProductsByOrganizationControllerHandle400
    | GetProductsByOrganizationControllerHandle401
    | GetProductsByOrganizationControllerHandle404
    | GetProductsByOrganizationControllerHandle409
    | GetProductsByOrganizationControllerHandle500;
};
