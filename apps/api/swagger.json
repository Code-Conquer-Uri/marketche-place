{
  "openapi": "3.0.0",
  "paths": {
    "/users/search": {
      "get": {
        "operationId": "SearchUserController_handle",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "default": 1, "type": "number" }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": { "enum": ["asc", "desc"], "type": "string" }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": ["createdAt", "updatedAt", "name", "email"],
              "type": "string"
            }
          },
          {
            "name": "searchTerm",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchUserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Search users",
        "tags": ["users"]
      }
    },
    "/store-front": {
      "post": {
        "operationId": "CreateStoreFrontController_handle",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreFrontBodyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Store front created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateStoreFrontResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Create a store front",
        "tags": ["store-front"]
      },
      "patch": {
        "operationId": "UpdateStoreFrontController_handle",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreFrontBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Store front updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateStoreFrontResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Update a store front",
        "tags": ["store-front"]
      },
      "get": {
        "operationId": "GetStoreFrontController_handle",
        "parameters": [
          {
            "name": "organizationId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the store front",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStoreFrontResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Get a store front",
        "tags": ["store-front"]
      }
    },
    "/products": {
      "post": {
        "operationId": "CreateProductController_handle",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateProductBodyDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Create a product",
        "tags": ["products"]
      }
    },
    "/products/get-by-id/{productId}": {
      "get": {
        "operationId": "GetProductController_handle",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "The ID of the product to retrieve",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Get a product by ID",
        "tags": ["products"]
      }
    },
    "/products/{productId}": {
      "patch": {
        "operationId": "UpdateProductController_handle",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "The ID of the product to update",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateProductBodyDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateProductResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Update a product",
        "tags": ["products"]
      },
      "delete": {
        "operationId": "DeleteProductController_handle",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "The ID of the product to delete",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProductResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Delete a product",
        "tags": ["products"]
      }
    },
    "/products/search": {
      "get": {
        "operationId": "SearchProductController_handle",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": { "minimum": 1, "default": 1, "type": "number" }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": { "enum": ["asc", "desc"], "type": "string" }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": ["createdAt", "updatedAt", "title", "price"],
              "type": "string"
            }
          },
          {
            "name": "searchTerm",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "organizationId",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchProductResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Search products",
        "tags": ["products"]
      }
    },
    "/products/organization": {
      "get": {
        "operationId": "GetProductsByOrganizationController_handle",
        "parameters": [
          {
            "name": "organizationId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns products for the specified organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductsByOrganizationResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Get products by organization",
        "tags": ["products"]
      }
    },
    "/products/public": {
      "get": {
        "operationId": "GetPublicProductsController_handle",
        "parameters": [
          {
            "name": "limitPerOrganization",
            "required": false,
            "in": "query",
            "description": "Maximum number of products per organization",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": { "enum": ["asc", "desc"], "type": "string" }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": ["createdAt", "updatedAt", "title", "price"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns public products from all organizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicProductsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Get public products from all organizations",
        "tags": ["products"]
      }
    },
    "/products/featured": {
      "get": {
        "operationId": "GetFeaturedProductsController_handle",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Maximum number of featured products to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "schema": { "enum": ["asc", "desc"], "type": "string" }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "schema": {
              "enum": ["createdAt", "updatedAt", "title", "price"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns featured products from all organizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeaturedProductsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Get featured products from all organizations",
        "tags": ["products"]
      }
    },
    "/products/{productId}/similar": {
      "get": {
        "operationId": "GetSimilarProductsController_handle",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "ID of the product to find similar products for",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Maximum number of similar products to return",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": { "minimum": 1, "default": 1, "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns similar products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSimilarProductsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": { "description": "Product not found" },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Get similar products based on description",
        "tags": ["products"]
      }
    },
    "/organization/by-slug/{slug}": {
      "get": {
        "operationId": "GetOrganizationBySlugController_handle",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "description": "Organization slug",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationBySlugResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Get organization by slug",
        "tags": ["organization"]
      }
    },
    "/organization/search": {
      "get": {
        "operationId": "SearchOrganizationsController_handle",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search term to filter organizations by name or slug",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination (default: 1)",
            "schema": { "type": "number" }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "Number of items per page (default: 10)",
            "schema": { "type": "number" }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Field to order by (default: createdAt)",
            "schema": {
              "enum": ["createdAt", "updatedAt", "name", "slug"],
              "type": "string"
            }
          },
          {
            "name": "orderDirection",
            "required": false,
            "in": "query",
            "description": "Order direction (default: desc)",
            "schema": { "enum": ["asc", "desc"], "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated search results for organizations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchOrganizationsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Search organizations with pagination",
        "tags": ["organization"]
      }
    },
    "/coupons": {
      "post": {
        "operationId": "CreateCouponController_handle",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateCouponBodyDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Coupon created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Create a coupon",
        "tags": ["coupons"]
      },
      "get": {
        "operationId": "SearchCouponsController_handle",
        "parameters": [
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "description": "Filter by product ID",
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "Filter by user ID",
            "schema": { "type": "string" }
          },
          {
            "name": "minDiscountPercentage",
            "required": false,
            "in": "query",
            "description": "Minimum discount percentage",
            "schema": { "type": "number" }
          },
          {
            "name": "maxDiscountPercentage",
            "required": false,
            "in": "query",
            "description": "Maximum discount percentage",
            "schema": { "type": "number" }
          },
          {
            "name": "minQuantity",
            "required": false,
            "in": "query",
            "description": "Minimum quantity",
            "schema": { "type": "number" }
          },
          {
            "name": "maxQuantity",
            "required": false,
            "in": "query",
            "description": "Maximum quantity",
            "schema": { "type": "number" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page (default: 10)",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "Coupons retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCouponsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Search coupons with advanced filters",
        "tags": ["coupons"]
      }
    },
    "/coupons/{id}": {
      "get": {
        "operationId": "GetCouponController_handle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Coupon ID",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Coupon retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get a coupon by ID",
        "tags": ["coupons"]
      },
      "patch": {
        "operationId": "UpdateCouponController_handle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Coupon ID",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCouponBodyDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Coupon updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Update a coupon",
        "tags": ["coupons"]
      },
      "delete": {
        "operationId": "DeleteCouponController_handle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Coupon ID",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Coupon deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Delete a coupon",
        "tags": ["coupons"]
      }
    },
    "/coupons/product/{productId}": {
      "get": {
        "operationId": "GetCouponsByProductIdController_handle",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Coupons retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponsByProductIdResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get coupons by product ID",
        "tags": ["coupons"]
      }
    },
    "/coupons/products": {
      "get": {
        "operationId": "GetCouponsByProductsIdsController_handle",
        "parameters": [
          {
            "name": "productIds",
            "required": true,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Coupons retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCouponsByProductsIdsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get coupons by multiple product IDs",
        "tags": ["coupons"]
      }
    },
    "/promotions": {
      "post": {
        "operationId": "CreatePromotionController_handle",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionBodyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Promotion created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePromotionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Create a promotion",
        "tags": ["promotions"]
      },
      "get": {
        "operationId": "SearchPromotionsController_handle",
        "parameters": [
          {
            "name": "productId",
            "required": false,
            "in": "query",
            "description": "Filter by product ID",
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "Filter by user ID",
            "schema": { "type": "string" }
          },
          {
            "name": "minDiscountPercentage",
            "required": false,
            "in": "query",
            "description": "Minimum discount percentage",
            "schema": { "type": "string" }
          },
          {
            "name": "maxDiscountPercentage",
            "required": false,
            "in": "query",
            "description": "Maximum discount percentage",
            "schema": { "type": "string" }
          },
          {
            "name": "validFrom",
            "required": false,
            "in": "query",
            "description": "Valid from date (ISO string)",
            "schema": { "type": "string" }
          },
          {
            "name": "validUntil",
            "required": false,
            "in": "query",
            "description": "Valid until date (ISO string)",
            "schema": { "type": "string" }
          },
          {
            "name": "isActive",
            "required": false,
            "in": "query",
            "description": "Filter by active status",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page (default: 10)",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchPromotionsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "summary": "Search promotions with advanced filters",
        "tags": ["promotions"]
      }
    },
    "/promotions/{id}": {
      "get": {
        "operationId": "GetPromotionController_handle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotion retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromotionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get a promotion by ID",
        "tags": ["promotions"]
      },
      "patch": {
        "operationId": "UpdatePromotionController_handle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Promotion updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePromotionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Update a promotion",
        "tags": ["promotions"]
      },
      "delete": {
        "operationId": "DeletePromotionController_handle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotion deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePromotionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Delete a promotion",
        "tags": ["promotions"]
      }
    },
    "/promotions/product/{productId}": {
      "get": {
        "operationId": "GetPromotionsByProductIdController_handle",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromotionsByProductIdResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get promotions by product ID",
        "tags": ["promotions"]
      }
    },
    "/promotions/products": {
      "get": {
        "operationId": "GetPromotionsByProductsIdsController_handle",
        "parameters": [
          {
            "name": "productIds",
            "required": true,
            "in": "query",
            "description": "Array of product IDs",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromotionsByProductsIdsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get promotions by product IDs",
        "tags": ["promotions"]
      }
    },
    "/user-coupons": {
      "post": {
        "operationId": "CreateUserCouponController_handle",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCouponBodyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User coupon created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Create a user coupon",
        "tags": ["user-coupons"]
      },
      "get": {
        "operationId": "SearchUserCouponsController_handle",
        "parameters": [
          {
            "name": "couponId",
            "required": false,
            "in": "query",
            "description": "Filter by coupon ID",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page (default: 10)",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "User coupons retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchUserCouponsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Search user coupons with pagination",
        "tags": ["user-coupons"]
      }
    },
    "/user-coupons/{id}": {
      "get": {
        "operationId": "GetUserCouponController_handle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "User coupon retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get a user coupon by ID",
        "tags": ["user-coupons"]
      },
      "delete": {
        "operationId": "DeleteUserCouponController_handle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "User coupon deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserCouponResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequestErrorDto" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFoundErrorDto" }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConflictErrorDto" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDto"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Delete a user coupon",
        "tags": ["user-coupons"]
      }
    },
    "/user-coupons/coupon/{couponId}": {
      "get": {
        "operationId": "GetUserCouponsByCouponIdController_handle",
        "parameters": [
          {
            "name": "couponId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "User coupons retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserCouponsByCouponIdResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get user coupons by coupon ID",
        "tags": ["user-coupons"]
      }
    },
    "/user-coupons/coupons": {
      "get": {
        "operationId": "GetUserCouponsByCouponsIdsController_handle",
        "parameters": [
          {
            "name": "couponIds",
            "required": true,
            "in": "query",
            "description": "Array of coupon IDs",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "User coupons retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserCouponsByCouponsIdsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get user coupons by coupon IDs",
        "tags": ["user-coupons"]
      }
    }
  },
  "info": {
    "title": "MarkeTchêplace",
    "description": "MarkeTchêplace API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "BadRequestErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number" },
          "message": { "type": "string" },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": { "type": "string" },
                "expected": { "type": "string" },
                "received": { "type": "string" },
                "path": { "type": "array", "items": { "type": "string" } },
                "message": { "type": "string" }
              },
              "required": ["code", "expected", "received", "path", "message"]
            }
          }
        },
        "required": ["statusCode", "message"]
      },
      "NotFoundErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number" },
          "message": { "type": "string" }
        },
        "required": ["statusCode", "message"]
      },
      "InternalServerErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number" },
          "message": { "type": "string" }
        },
        "required": ["statusCode", "message"]
      },
      "UnauthorizedErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number" },
          "message": { "type": "string" }
        },
        "required": ["statusCode", "message"]
      },
      "ConflictErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": { "type": "number" },
          "message": { "type": "string" }
        },
        "required": ["statusCode", "message"]
      },
      "SearchUserResponseDto": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "email": { "type": "string" },
                "emailVerified": { "type": "boolean" },
                "banned": { "type": "boolean" },
                "banExpires": { "type": "string", "nullable": true },
                "banReason": { "type": "string" },
                "image": { "type": "string" },
                "role": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": ["id", "name", "email", "emailVerified"]
            }
          },
          "message": { "type": "string" },
          "total": { "type": "number" },
          "pages": { "type": "number" }
        }
      },
      "CreateStoreFrontResponseDto": {
        "type": "object",
        "properties": {
          "storeFront": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "organizationId": { "type": "string" },
              "logoImageUrl": { "type": "string" },
              "logoImageBlurData": { "type": "string" },
              "bannerImageUrl": { "type": "string" },
              "bannerImageBlurData": { "type": "string" },
              "whatsappNumber": { "type": "string" },
              "location": { "type": "string" },
              "theme": {
                "type": "string",
                "enum": ["DEFAULT", "AMETHYST_HAZE", "SOLAR_DUSK"]
              }
            },
            "required": [
              "id",
              "organizationId",
              "logoImageUrl",
              "logoImageBlurData",
              "bannerImageUrl",
              "bannerImageBlurData",
              "location",
              "theme"
            ]
          },
          "message": { "type": "string" }
        },
        "required": ["storeFront"]
      },
      "CreateStoreFrontBodyDto": {
        "type": "object",
        "properties": {
          "organizationId": { "type": "string" },
          "logoImage": { "type": "string" },
          "bannerImage": { "type": "string" },
          "whatsappNumber": { "type": "string" },
          "location": { "type": "string" },
          "theme": {
            "default": "DEFAULT",
            "type": "string",
            "enum": ["DEFAULT", "AMETHYST_HAZE", "SOLAR_DUSK"]
          }
        },
        "required": ["organizationId", "logoImage", "bannerImage", "location"]
      },
      "UpdateStoreFrontResponseDto": {
        "type": "object",
        "properties": {
          "storeFront": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "organizationId": { "type": "string" },
              "logoImageUrl": { "type": "string" },
              "logoImageBlurData": { "type": "string" },
              "bannerImageUrl": { "type": "string" },
              "bannerImageBlurData": { "type": "string" },
              "whatsappNumber": { "type": "string" },
              "location": { "type": "string" },
              "theme": {
                "type": "string",
                "enum": ["DEFAULT", "AMETHYST_HAZE", "SOLAR_DUSK"]
              }
            },
            "required": [
              "id",
              "organizationId",
              "logoImageUrl",
              "logoImageBlurData",
              "bannerImageUrl",
              "bannerImageBlurData",
              "location",
              "theme"
            ]
          },
          "message": { "type": "string" }
        },
        "required": ["storeFront"]
      },
      "UpdateStoreFrontBodyDto": {
        "type": "object",
        "properties": {
          "organizationId": { "type": "string" },
          "logoImage": { "type": "string" },
          "bannerImage": { "type": "string" },
          "whatsappNumber": { "type": "string" },
          "location": { "type": "string" },
          "theme": {
            "type": "string",
            "enum": ["DEFAULT", "AMETHYST_HAZE", "SOLAR_DUSK"]
          }
        },
        "required": ["organizationId"]
      },
      "GetStoreFrontResponseDto": {
        "type": "object",
        "properties": {
          "storeFront": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "organizationId": { "type": "string" },
              "logoImageUrl": { "type": "string" },
              "logoImageBlurData": { "type": "string" },
              "bannerImageUrl": { "type": "string" },
              "bannerImageBlurData": { "type": "string" },
              "whatsappNumber": { "type": "string" },
              "location": { "type": "string" },
              "theme": {
                "type": "string",
                "enum": ["DEFAULT", "AMETHYST_HAZE", "SOLAR_DUSK"]
              }
            },
            "required": [
              "id",
              "organizationId",
              "logoImageUrl",
              "logoImageBlurData",
              "bannerImageUrl",
              "bannerImageBlurData",
              "location",
              "theme"
            ]
          },
          "message": { "type": "string" }
        },
        "required": ["storeFront"]
      },
      "CreateProductResponseDto": {
        "type": "object",
        "properties": {
          "product": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "description": { "type": "string" },
              "imageUrl": { "type": "string", "format": "uri" },
              "imageBlurData": { "type": "string" },
              "price": { "type": "number" },
              "title": { "type": "string" },
              "organizationId": { "type": "string" },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": [
              "id",
              "description",
              "imageUrl",
              "imageBlurData",
              "price",
              "title",
              "organizationId"
            ]
          },
          "message": { "type": "string" }
        },
        "required": ["product"]
      },
      "CreateProductBodyDto": {
        "type": "object",
        "properties": {
          "organizationId": { "type": "string" },
          "image": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number", "exclusiveMinimum": 0 }
        },
        "required": ["organizationId", "image", "title", "description", "price"]
      },
      "GetProductResponseDto": {
        "type": "object",
        "properties": {
          "product": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "description": { "type": "string" },
              "imageUrl": { "type": "string", "format": "uri" },
              "imageBlurData": { "type": "string" },
              "price": { "type": "number" },
              "title": { "type": "string" },
              "organizationId": { "type": "string" },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": [
              "id",
              "description",
              "imageUrl",
              "imageBlurData",
              "price",
              "title",
              "organizationId"
            ]
          },
          "message": { "type": "string" }
        },
        "required": ["product"]
      },
      "UpdateProductResponseDto": {
        "type": "object",
        "properties": {
          "product": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "description": { "type": "string" },
              "imageUrl": { "type": "string", "format": "uri" },
              "imageBlurData": { "type": "string" },
              "price": { "type": "number" },
              "title": { "type": "string" },
              "organizationId": { "type": "string" },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": [
              "id",
              "description",
              "imageUrl",
              "imageBlurData",
              "price",
              "title",
              "organizationId"
            ]
          },
          "message": { "type": "string" }
        },
        "required": ["product"]
      },
      "UpdateProductBodyDto": {
        "type": "object",
        "properties": {
          "image": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "number", "exclusiveMinimum": 0 }
        }
      },
      "DeleteProductResponseDto": {
        "type": "object",
        "properties": { "message": { "type": "string" } },
        "required": ["message"]
      },
      "SearchProductResponseDto": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "description": { "type": "string" },
                "imageUrl": { "type": "string", "format": "uri" },
                "imageBlurData": { "type": "string" },
                "price": { "type": "number" },
                "title": { "type": "string" },
                "organizationId": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": [
                "id",
                "description",
                "imageUrl",
                "imageBlurData",
                "price",
                "title",
                "organizationId"
              ]
            }
          },
          "message": { "type": "string" },
          "total": { "type": "number" },
          "pages": { "type": "number" }
        }
      },
      "GetProductsByOrganizationResponseDto": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "description": { "type": "string" },
                "imageUrl": { "type": "string", "format": "uri" },
                "imageBlurData": { "type": "string" },
                "price": { "type": "number" },
                "title": { "type": "string" },
                "organizationId": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": [
                "id",
                "description",
                "imageUrl",
                "imageBlurData",
                "price",
                "title",
                "organizationId"
              ]
            }
          },
          "message": { "type": "string" }
        },
        "required": ["products"]
      },
      "GetPublicProductsResponseDto": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "description": { "type": "string" },
                "imageUrl": { "type": "string", "format": "uri" },
                "imageBlurData": { "type": "string" },
                "price": { "type": "number" },
                "title": { "type": "string" },
                "organizationId": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": [
                "id",
                "description",
                "imageUrl",
                "imageBlurData",
                "price",
                "title",
                "organizationId"
              ]
            }
          },
          "message": { "type": "string" }
        },
        "required": ["products"]
      },
      "GetFeaturedProductsResponseDto": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "description": { "type": "string" },
                "imageUrl": { "type": "string", "format": "uri" },
                "imageBlurData": { "type": "string" },
                "price": { "type": "number" },
                "title": { "type": "string" },
                "organizationId": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": [
                "id",
                "description",
                "imageUrl",
                "imageBlurData",
                "price",
                "title",
                "organizationId"
              ]
            }
          },
          "message": { "type": "string" }
        },
        "required": ["products"]
      },
      "GetSimilarProductsResponseDto": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "description": { "type": "string" },
                "imageUrl": { "type": "string", "format": "uri" },
                "imageBlurData": { "type": "string" },
                "price": { "type": "number" },
                "title": { "type": "string" },
                "organizationId": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": [
                "id",
                "description",
                "imageUrl",
                "imageBlurData",
                "price",
                "title",
                "organizationId"
              ]
            }
          },
          "total": { "type": "number" },
          "pages": { "type": "number" },
          "message": { "type": "string" }
        },
        "required": ["products", "total", "pages"]
      },
      "GetOrganizationBySlugResponseDto": {
        "type": "object",
        "properties": {
          "organization": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "slug": { "type": "string", "minLength": 3, "maxLength": 255 },
              "logo": { "type": "string" },
              "metadata": { "type": "string" },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": ["id", "name"]
          },
          "message": { "type": "string" }
        },
        "required": ["organization"]
      },
      "SearchOrganizationsResponseDto": {
        "type": "object",
        "properties": {
          "organizations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "slug": { "type": "string", "minLength": 3, "maxLength": 255 },
                "logo": { "type": "string" },
                "metadata": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": ["id", "name"]
            }
          },
          "total": { "type": "number" },
          "pages": { "type": "number" },
          "currentPage": { "type": "number" },
          "perPage": { "type": "number" },
          "message": { "type": "string" }
        },
        "required": [
          "organizations",
          "total",
          "pages",
          "currentPage",
          "perPage"
        ]
      },
      "CreateCouponResponseDto": {
        "type": "object",
        "properties": {
          "coupon": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "currentQuantity": { "type": "number" },
              "discountPercentage": { "type": "number" },
              "maxQuantity": { "type": "number" },
              "productId": { "type": "string" },
              "userId": { "type": "string" },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": [
              "id",
              "currentQuantity",
              "discountPercentage",
              "maxQuantity",
              "productId",
              "userId"
            ]
          },
          "message": { "type": "string" }
        },
        "required": ["coupon"]
      },
      "CreateCouponBodyDto": {
        "type": "object",
        "properties": {
          "productId": { "type": "string" },
          "discountPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "maxQuantity": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "maximum": 9007199254740991
          }
        },
        "required": ["productId", "discountPercentage", "maxQuantity"]
      },
      "GetCouponResponseDto": {
        "type": "object",
        "properties": {
          "coupon": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "currentQuantity": { "type": "number" },
              "discountPercentage": { "type": "number" },
              "maxQuantity": { "type": "number" },
              "productId": { "type": "string" },
              "userId": { "type": "string" },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": [
              "id",
              "currentQuantity",
              "discountPercentage",
              "maxQuantity",
              "productId",
              "userId"
            ]
          }
        },
        "required": ["coupon"]
      },
      "UpdateCouponResponseDto": {
        "type": "object",
        "properties": {
          "coupon": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "currentQuantity": { "type": "number" },
              "discountPercentage": { "type": "number" },
              "maxQuantity": { "type": "number" },
              "productId": { "type": "string" },
              "userId": { "type": "string" },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": [
              "id",
              "currentQuantity",
              "discountPercentage",
              "maxQuantity",
              "productId",
              "userId"
            ]
          },
          "message": { "type": "string" }
        },
        "required": ["coupon"]
      },
      "UpdateCouponBodyDto": {
        "type": "object",
        "properties": {
          "discountPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "maxQuantity": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "maximum": 9007199254740991
          },
          "currentQuantity": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991
          }
        }
      },
      "DeleteCouponResponseDto": {
        "type": "object",
        "properties": { "message": { "type": "string" } },
        "required": ["message"]
      },
      "SearchCouponsResponseDto": {
        "type": "object",
        "properties": {
          "coupons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "currentQuantity": { "type": "number" },
                "discountPercentage": { "type": "number" },
                "maxQuantity": { "type": "number" },
                "productId": { "type": "string" },
                "userId": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": [
                "id",
                "currentQuantity",
                "discountPercentage",
                "maxQuantity",
                "productId",
                "userId"
              ]
            }
          },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "limit": { "type": "number" },
          "totalPages": { "type": "number" }
        },
        "required": ["coupons", "total", "page", "limit", "totalPages"]
      },
      "GetCouponsByProductIdResponseDto": {
        "type": "object",
        "properties": {
          "coupons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "currentQuantity": { "type": "number" },
                "discountPercentage": { "type": "number" },
                "maxQuantity": { "type": "number" },
                "productId": { "type": "string" },
                "userId": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": [
                "id",
                "currentQuantity",
                "discountPercentage",
                "maxQuantity",
                "productId",
                "userId"
              ]
            }
          }
        },
        "required": ["coupons"]
      },
      "GetCouponsByProductsIdsResponseDto": {
        "type": "object",
        "properties": {
          "coupons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "currentQuantity": { "type": "number" },
                "discountPercentage": { "type": "number" },
                "maxQuantity": { "type": "number" },
                "productId": { "type": "string" },
                "userId": { "type": "string" },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": [
                "id",
                "currentQuantity",
                "discountPercentage",
                "maxQuantity",
                "productId",
                "userId"
              ]
            }
          }
        },
        "required": ["coupons"]
      },
      "CreatePromotionResponseDto": {
        "type": "object",
        "properties": {
          "promotion": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "discountPercentage": { "type": "number" },
              "productId": { "type": "string" },
              "userId": { "type": "string" },
              "validUntil": { "type": "string", "nullable": true },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": ["id", "discountPercentage", "productId", "userId"]
          },
          "message": { "type": "string" }
        },
        "required": ["promotion"]
      },
      "CreatePromotionBodyDto": {
        "type": "object",
        "properties": {
          "productId": { "type": "string" },
          "discountPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "validUntil": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
          }
        },
        "required": ["productId", "discountPercentage", "validUntil"]
      },
      "GetPromotionResponseDto": {
        "type": "object",
        "properties": {
          "promotion": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "discountPercentage": { "type": "number" },
              "productId": { "type": "string" },
              "userId": { "type": "string" },
              "validUntil": { "type": "string", "nullable": true },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": ["id", "discountPercentage", "productId", "userId"]
          }
        },
        "required": ["promotion"]
      },
      "UpdatePromotionResponseDto": {
        "type": "object",
        "properties": {
          "promotion": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "discountPercentage": { "type": "number" },
              "productId": { "type": "string" },
              "userId": { "type": "string" },
              "validUntil": { "type": "string", "nullable": true },
              "createdAt": { "type": "string", "nullable": true },
              "updatedAt": { "type": "string", "nullable": true }
            },
            "required": ["id", "discountPercentage", "productId", "userId"]
          },
          "message": { "type": "string" }
        },
        "required": ["promotion"]
      },
      "UpdatePromotionBodyDto": {
        "type": "object",
        "properties": {
          "discountPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "validUntil": {
            "type": "string",
            "format": "date-time",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))T(?:(?:[01]\\d|2[0-3]):[0-5]\\d(?::[0-5]\\d(?:\\.\\d+)?)?(?:Z))$"
          }
        }
      },
      "DeletePromotionResponseDto": {
        "type": "object",
        "properties": { "message": { "type": "string" } },
        "required": ["message"]
      },
      "SearchPromotionsResponseDto": {
        "type": "object",
        "properties": {
          "promotions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "discountPercentage": { "type": "number" },
                "productId": { "type": "string" },
                "userId": { "type": "string" },
                "validUntil": { "type": "string", "nullable": true },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": ["id", "discountPercentage", "productId", "userId"]
            }
          },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "limit": { "type": "number" },
          "totalPages": { "type": "number" }
        },
        "required": ["promotions", "total", "page", "limit", "totalPages"]
      },
      "GetPromotionsByProductIdResponseDto": {
        "type": "object",
        "properties": {
          "promotions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "discountPercentage": { "type": "number" },
                "productId": { "type": "string" },
                "userId": { "type": "string" },
                "validUntil": { "type": "string", "nullable": true },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": ["id", "discountPercentage", "productId", "userId"]
            }
          }
        },
        "required": ["promotions"]
      },
      "GetPromotionsByProductsIdsResponseDto": {
        "type": "object",
        "properties": {
          "promotions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "discountPercentage": { "type": "number" },
                "productId": { "type": "string" },
                "userId": { "type": "string" },
                "validUntil": { "type": "string", "nullable": true },
                "createdAt": { "type": "string", "nullable": true },
                "updatedAt": { "type": "string", "nullable": true }
              },
              "required": ["id", "discountPercentage", "productId", "userId"]
            }
          }
        },
        "required": ["promotions"]
      },
      "CreateUserCouponResponseDto": {
        "type": "object",
        "properties": {
          "userCoupon": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "couponId": { "type": "string" },
              "userId": { "type": "string" }
            },
            "required": ["id", "couponId", "userId"]
          },
          "message": { "type": "string" }
        },
        "required": ["userCoupon"]
      },
      "CreateUserCouponBodyDto": {
        "type": "object",
        "properties": { "couponId": { "type": "string" } },
        "required": ["couponId"]
      },
      "GetUserCouponResponseDto": {
        "type": "object",
        "properties": {
          "userCoupon": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "couponId": { "type": "string" },
              "userId": { "type": "string" }
            },
            "required": ["id", "couponId", "userId"]
          }
        },
        "required": ["userCoupon"]
      },
      "DeleteUserCouponResponseDto": {
        "type": "object",
        "properties": { "message": { "type": "string" } },
        "required": ["message"]
      },
      "SearchUserCouponsResponseDto": {
        "type": "object",
        "properties": {
          "userCoupons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "couponId": { "type": "string" },
                "userId": { "type": "string" }
              },
              "required": ["id", "couponId", "userId"]
            }
          },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "limit": { "type": "number" },
          "totalPages": { "type": "number" }
        },
        "required": ["userCoupons", "total", "page", "limit", "totalPages"]
      },
      "GetUserCouponsByCouponIdResponseDto": {
        "type": "object",
        "properties": {
          "userCoupons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "couponId": { "type": "string" },
                "userId": { "type": "string" }
              },
              "required": ["id", "couponId", "userId"]
            }
          }
        },
        "required": ["userCoupons"]
      },
      "GetUserCouponsByCouponsIdsResponseDto": {
        "type": "object",
        "properties": {
          "userCoupons": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "couponId": { "type": "string" },
                "userId": { "type": "string" }
              },
              "required": ["id", "couponId", "userId"]
            }
          }
        },
        "required": ["userCoupons"]
      }
    }
  }
}
